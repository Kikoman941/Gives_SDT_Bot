CREATE TABLE public.users (
	"id" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"tgId" text NOT NULL,
	"isAdmin" bool NOT NULL DEFAULT false,
	CONSTRAINT users_pk PRIMARY KEY ("id"),
	CONSTRAINT users_un UNIQUE ("tgId")
);

CREATE TABLE public.users_states (
	"userId" int4 NOT NULL,
	"state" text NOT NULL,
	"data" text NULL,
	CONSTRAINT users_states_un UNIQUE ("userId"),
	CONSTRAINT users_states_fk FOREIGN KEY ("userId") REFERENCES public.users("id")
);

CREATE TABLE public.gives (
	"id" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"owner" int4 NOT NULL,
	"isActive" bool NOT NULL DEFAULT false,
	"isDeleted" bool NOT NULL DEFAULT false,
	"title" text NULL,
	"description" text NULL,
	"image" text NULL,
	"startAt" timestamptz NULL,
	"finishAt" timestamptz NULL,
	"channel" text NULL,
	"messageId" text NULL,
	"targetChannels" _text NULL,
    "winnersCount" int4 NULL,
	CONSTRAINT gives_pk PRIMARY KEY ("id"),
	CONSTRAINT gives_fk FOREIGN KEY ("owner") REFERENCES public.users("id")
);

CREATE TABLE public.gives_members (
    "giveId" int4 NOT NULL,
    "memberTgId" text NOT NULL,
    CONSTRAINT gives_members_fk FOREIGN KEY ("giveId") REFERENCES public.gives("id")
)